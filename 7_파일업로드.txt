1.pom.xml > dependencies 태그

2-1) javax.servlet-api 검색 > Java Servlet API(첫번째꺼) > 3.1.0

2-2) commons-fileupload 검색 > Apache Commons FileUpload(첫번째꺼) > 1.4

2-3) commons-io 검색 > Apache Commons IO(첫번째꺼) > 2.11

2-4) imgscalr-lib 검색 > Imgscalr A Java Image Scaling Library(첫번째꺼) > 4.2

2-5) thumbnailator 검색 > Thumbnailator(첫번째꺼) > 0.4.8

3. Maven Build

4. root-context.xml

<bean id="multipartResovler" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 파일 업로드 용량(10MB) -->
		<property name="maxUploadSize" value="10485760" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	
	<!-- 파일업로드 디렉토리 설정 -->
	<bean id="uploadPath" class="java.lang.String">
		<constructor-arg value="c:\\upload" />
	</bean>
복붙

5. web.xml

6-1) <param-value>...../servlet-context.xml</param-value>가 있는 appServlet의
<load-on-startup>태그 아래에

<!-- web.xml의 설정은 tomcat 자체 설정 -->
		<multipart-config>
			<!-- 어디에 업로드? -->
			<location>C:\\upload</location>
			<!-- 업로드 최대 크기? 1MB * 20 -->
			<max-file-size>20971520</max-file-size>
			<!-- 한번에 업로드 크기? 40MB -->
			<max-request-size>419043040</max-request-size>
			<!-- 메모리? 20MB -->
			<file-size-threshold>20971520</file-size-threshold>
		</multipart-config>
복붙

6-2) servlet/servlet-mapping태그 아래. 한글처리 필터태그 위

<!-- multipart filter 추가 -->
	<filter>
		<display-name>springMultipartFilter</display-name>
		<filter-name>springMultipartFilter</filter-name>
		<filter-class>org.springframework.web.multipart.support.MultipartFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springMultipartFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
복붙

7. Servers > Tomcat폴더 아래 context.xml

8-1) <Context>태그에 allowCasualMultipartParsing="true" 속성 추가
( <Context allowCasualMultipartParsing="true"> )

8-2) <Context>태그 안에
<!-- 캐시문제 해결 -->
	<Resources cashingAllowed="true" cacheMaxSize="100000"></Resources>
복붙